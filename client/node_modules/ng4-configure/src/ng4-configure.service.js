"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var configure_options_1 = require("./configure-options");
var core_1 = require("@angular/core");
var http_1 = require("@angular/http");
require("rxjs/add/operator/map");
require("rxjs/add/operator/toPromise");
var ConfigureService = (function () {
    function ConfigureService(http, configOptions) {
        this.http = http;
        this.configOptions = configOptions;
    }
    ConfigureService.prototype.load = function () {
        var _this = this;
        var promise = this.http.get(this.buildUrl())
            .map(this.extractData)
            .toPromise();
        promise.then(function (config) {
            _this.config = config;
        });
        return promise;
    };
    ConfigureService.prototype.buildUrl = function () {
        var url = this.configOptions.ConfigurationURL;
        if (this.configOptions.AppVersion !== '') {
            url += '?v=' + this.configOptions.AppVersion;
        }
        if (this.configOptions.BustCache) {
            url += '?t=' + this.makeId();
        }
        return url;
    };
    ConfigureService.prototype.makeId = function () {
        var text = "";
        var possible = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";
        for (var i = 0; i < 5; i++)
            text += possible.charAt(Math.floor(Math.random() * possible.length));
        return text;
    };
    ConfigureService.prototype.extractData = function (res) {
        var body = res.json();
        return body || {};
    };
    ConfigureService.decorators = [
        { type: core_1.Injectable },
    ];
    /** @nocollapse */
    ConfigureService.ctorParameters = function () { return [
        { type: http_1.Http, },
        { type: configure_options_1.ConfigureOptions, },
    ]; };
    return ConfigureService;
}());
exports.ConfigureService = ConfigureService;
//# sourceMappingURL=ng4-configure.service.js.map